summarise(n = n(), m = mean(gmsi_score))
data_combined %>%
group_by(cluster) %>%
summarise(n = n(), m = mean(gmsi_score, na.rm = T))
tibble(data_combined)
data_combined %>%
group_by(cluster) %>%
summarise(n = n(), m = mean(age, na.rm = T), )
x = run_pca(data_to_clust, 4)
x$pca_res
x$sum_pca
x$elbow
x$silhouette
x$plot_2D_pca
data_combined = merge(x = x$data, y = participant_data_clean, by = "participant_id", all = TRUE)
tibble(data_combined)
data_combined %>%
group_by(cluster) %>%
summarise(n = n(), m = mean(gmsi_score, na.rm = T), )
data_combined %>%
group_by(cluster) %>%
summarise(n = n(), m = mean(gmsi_score, na.rm = T), a = mean(age, na.rm = T))
# Determine the number of clusters (k)
k = 3  # You can change this based on your desired number of clusters
# Cut the hierarchical clustering tree into k clusters
clusters <- cutree(hc_res, k = k)
clusters
# Add cluster assignments as a new column to the dataset
data_to_clust$cluster <- clusters
# Plot dendrogram
plot(hc_res, hang = -1, cex = 0.6,
main = "Dendrogram - Hierarchical Clustering", xlab = "Cities", sub = "",
labels = data_to_clust$participant_id)
# Add clusters to the dendrogram
cluster_colors <- c("red", "blue", "green", "purple", "orange", "brown")
rect.hclust(hc_res, k = k, border = cluster_colors[1:k])
data_to_clust
data_combined = merge(x = data_to_clust, y = participant_data_clean, by = "participant_id", all = TRUE)
tibble(data_combined)
participant_data
participant_data = read_csv("~/Documents/github/2023-static-audio/data/mel_pref1/anonymous/data/Participant.csv")
ratings_data_clean = ratings_data %>%
filter(failed == FALSE) %>%  # filter out participants who failed
filter(is_repeat_trial == "FALSE") %>%  # filter out repeated trials
select(participant_id, definition, audio_name, answer) %>%
# extract audio name
mutate(audio_name = as.factor(as.numeric(str_extract(audio_name, "\\d+")))) %>%
# count number trials per participant
group_by(participant_id) %>%
mutate(n_ratings = n()) %>%
# z-score ratings per particiapnt
mutate(z_answer = scale(answer)) %>%
# exclude participants with less than <40 trials
filter(n_ratings >= 40)
ratings_data_clean
# N participants
length(table(ratings_data_clean$participant_id)) # 80
# N stimuli
length(table(ratings_data_clean$audio_name)) # 40
ggplot(ratings_data_clean, aes(reorder(audio_name, z_answer), z_answer, color=audio_name)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
ratings_data_clean
participant_data
participant_data_clean = participant_data %>%
filter(failed == FALSE) %>%  # filter out participants who failed
select(id, gender, age, gmsi) %>%
rename(participant_id = id) %>%
mutate(gmsi_12 = as.numeric(str_extract(str_extract(str_extract(gmsi, '"q_12": [0-9]'), ': [0-9]'), '[0-9]'))) %>%
mutate(gmsi_2 = as.numeric(str_extract(str_extract(str_extract(gmsi, '"q_02": [0-9]'), ': [0-9]'), '[0-9]'))) %>%
mutate(gmsi_16 = as.numeric(str_extract(str_extract(str_extract(gmsi, '"q_16": [0-9]'), ': [0-9]'), '[0-9]'))) %>%
mutate(gmsi_18 = as.numeric(str_extract(str_extract(str_extract(gmsi, '"q_18": [0-9]'), ': [0-9]'), '[0-9]'))) %>%
mutate(gmsi_21 = as.numeric(str_extract(str_extract(str_extract(gmsi, '"q_21": [0-9]'), ': [0-9]'), '[0-9]'))) %>%
mutate(gmsi_22 = as.numeric(str_extract(str_extract(str_extract(gmsi, '"q_22": [0-9]'), ': [0-9]'), '[0-9]'))) %>%
mutate(gmsi_35 = as.numeric(str_extract(str_extract(str_extract(gmsi, '"q_35": [0-9]'), ': [0-9]'), '[0-9]'))) %>%
group_by(participant_id) %>%
mutate(gmsi_score = rowMeans(cbind(gmsi_12, gmsi_2, gmsi_16, gmsi_18, gmsi_21, gmsi_22, gmsi_35))) %>%
select(-gmsi)
data_combined = merge(x = data_to_clust, y = participant_data_clean, by = "participant_id", all = TRUE)
tibble(data_combined)
data_combined[,-3,-50]
tibble(data_combined[,-3,-50])
tibble(data_combined[,-3:-50])
tibble(data_combined[,-3:-50]) %>% drop_na()
ddd = tibble(data_combined[,-3:-50]) %>% drop_na()
ddd
data_combined
colnames(data_combined)
data_combined[,-3:-45]
data_combined[,-3:-42]
ddd = tibble(data_combined[,-3:-42]) %>% drop_na()
ddd %>%
group_by(cluster) %>%
summarise(n = n(), m = mean(gmsi_score, na.rm = T), a = mean(age, na.rm = T))
# Add cluster assignments as a new column to the dataset
data_to_clust$cluster <- clusters
# Plot dendrogram
plot(hc_res, hang = -1, cex = 0.6,
main = "Dendrogram - Hierarchical Clustering", xlab = "Cities", sub = "",
labels = data_to_clust$participant_id)
# Add clusters to the dendrogram
cluster_colors <- c("red", "blue", "green", "purple", "orange", "brown")
rect.hclust(hc_res, k = k, border = cluster_colors[1:k])
participant_data
colnames(participant_data)
ratings_data
participant_data_clean
# clustering + individual differences
data_combined = merge(x = data_to_clust, y = participant_data_clean, by = "participant_id", all = TRUE)
data_combined
data_combined = tibble(data_combined[,-3:-42]) %>% drop_na()
data_combined
data_combined %>%
group_by(cluster) %>%
summarise(n = n(),
mean_gold = mean(gmsi_score, na.rm = T),
sd_gold = sd(gmsi_score, na.rm = T),
mean_age = mean(age, na.rm = T),
sd_age = mean(age, na.rm = T))
data_combined
data_combined
data_combined
data_combined
data_to_clust
# clustering + individual differences
data_combined_long = merge(x = data_to_clust, y = participant_data_clean, by = "participant_id", all = TRUE)
data_combined = tibble(data_combined_long[,-3:-42]) %>% drop_na()
data_combined %>%
group_by(cluster) %>%
summarise(n = n(),
mean_gold = mean(gmsi_score, na.rm = T),
sd_gold = sd(gmsi_score, na.rm = T),
mean_age = mean(age, na.rm = T),
sd_age = mean(age, na.rm = T))
data_combined_long
# replot long formar
tibble(data_combined_long)
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`)
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
ggplot(aes(reorder(name, value), value, color=name)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`)
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
ggplot(aes(reorder(name, value), value, color=name))
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35)
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(name, value), value, color=name)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(name, value[,1]), value[,1], color=name)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(factor(name), value[,1]), value[,1], color=name)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35)
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(name, value), value, color=name)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(name, value), value, color=cluster)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(name, value), value, color=factor(cluster))) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(name, value), value, color=factor(cluster))) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(name, value), value, color=factor(cluster))) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(name, value), value)) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
tibble(data_combined_long)
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35)
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(factor(name), value), value, color=factor(cluster))) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
# replot long formar
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35) %>%
ggplot(aes(reorder(factor(name), value), value)) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
# replot long formar
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35)
ggplot(data_to_plot, aes(reorder(factor(name), value), value, color=factor(cluster))) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
ggplot(data_to_plot, aes(reorder(factor(name), value), value,
# color=factor(cluster)
)) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
ratings_data_clean
data_to_plot
# clustering + individual differences
data_combined_long = merge(x = data_to_clust, y = participant_data_clean, by = "participant_id", all = TRUE)
data_combined = tibble(data_combined_long[,-3:-42]) %>% drop_na()
data_combined %>%
group_by(cluster) %>%
summarise(n = n(),
mean_gold = mean(gmsi_score, na.rm = T),
sd_gold = sd(gmsi_score, na.rm = T),
mean_age = mean(age, na.rm = T),
sd_age = mean(age, na.rm = T))
data_combined
data_combined_long
tibble(data_combined_long)
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`)
# replot long formar
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35)
data_to_plot
# replot long formar
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35)  %>%
mutate(audio_name = factor(name))
data_to_plot
ggplot(data_to_plot, aes(reorder(faudio_name, value), value, color = audio_name
# color=factor(cluster)
)) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
ggplot(data_to_plot, aes(reorder(audio_name, value), value, color = audio_name
# color=factor(cluster)
)) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
ggplot(data_to_plot, aes(reorder(audio_name, value), value, color = audio_name
# color=factor(cluster)
)) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
ggplot(data_to_plot, aes(reorder(audio_name, value), value, color = audio_name
# color=factor(cluster)
)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
data_to_plot
# replot long formar
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35)  %>%
mutate(audio_name = factor(name), z_answer = double(value))
# replot long formar
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`) %>%
select(-gmsi_12:-gmsi_35)  %>%
mutate(audio_name = factor(name), z_answer = numeric(value))
# replot long formar
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer") %>%
select(-gmsi_12:-gmsi_35)  %>%
mutate(audio_name = factor(audio_name), z_answer = numeric(z_answer))
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer") %>%
select(-gmsi_12:-gmsi_35)
data_to_plot
# replot long formar
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer") %>%
select(-gmsi_12:-gmsi_35)  %>%
mutate(audio_name = factor(audio_name), z_answer = numeric(z_answer[,1]))
tibble(data_combined_long)
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer")
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer")
View(data_to_plot)
# replot long formar
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer") %>%
select(-gmsi_12:-gmsi_35)  %>%
drop_na(z_answer)
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer") %>%
select(-gmsi_12:-gmsi_35)  %>%
drop_na(z_answer)
# replot long formar
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer") %>%
select(-gmsi_12:-gmsi_35)  %>%
drop_na(z_answer) %>%
mutate(audio_name = factor(audio_name), z_answer = numeric(z_answer))
tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer") %>%
select(-gmsi_12:-gmsi_35)  %>%
drop_na(z_answer)
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer") %>%
select(-gmsi_12:-gmsi_35)  %>%
drop_na(z_answer)
data_to_plot = tibble(data_combined_long) %>%
pivot_longer(cols = `117`:`86`, names_to = "audio_name", values_to = "z_answer") %>%
select(-gmsi_12:-gmsi_35)  %>%
drop_na(z_answer)
ggplot(data_to_plot, aes(reorder(audio_name, value), value, color = audio_name
# color=factor(cluster)
)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
ggplot(data_to_plot, aes(reorder(audio_name, z_answer), value, color = audio_name
# color=factor(cluster)
)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
ggplot(data_to_plot, aes(reorder(audio_name, z_answer), z_answer, color = audio_name
# color=factor(cluster)
)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
ggplot(data_to_plot, aes(reorder(audio_name, z_answer), z_answer,
color=factor(cluster)
)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "none")
ggplot(data_to_plot, aes(reorder(audio_name, z_answer), z_answer,
color=factor(cluster)
)) +
geom_boxplot() +
# geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "right")
data_combined %>%
group_by(cluster) %>%
summarise(n = n(),
mean_gold = mean(gmsi_score, na.rm = T),
sd_gold = sd(gmsi_score, na.rm = T),
mean_age = mean(age, na.rm = T),
sd_age = mean(age, na.rm = T))
Plot dendrogram with different cut heights and highlight six clusters with distinct colors
# Plot dendrogram with different cut heights and highlight six clusters with distinct colors
png("plots/plot_dendrogram_UA_gov.confidence.png", height = 14, width = 14, units = "cm", res = 300)
plot(hc_res, hang = -1, cex = 0.6,
main = "Dendrogram UKRAINE - HCLUST", xlab = "Cities", sub = "",
labels = wvs_merged_data$city_name)
plot(hc_res, hang = -1, cex = 0.6,
main = "Dendrogram - Hierarchical Clustering", xlab = "Cities", sub = "",
labels = data_to_clust$participant_id)
dev.off()
# Plot dendrogram with different cut heights and highlight six clusters with distinct colors
png("plots/plot_dendrogram_UA_gov.confidence.png", height = 14, width = 14, units = "cm", res = 300)
plot(hc_res, hang = -1, cex = 0.6,
main = "Dendrogram - Hierarchical Clustering", xlab = "Cities", sub = "",
labels = data_to_clust$participant_id)
rect.hclust(hc_res, k = k, border = cluster_colors[1:k])  # Highlight six clusters with distinct colors
dev.off()
# clustering + individual differences
data_combined_long = merge(x = data_to_clust, y = participant_data_clean, by = "participant_id", all = TRUE)
data_combined = tibble(data_combined_long[,-3:-42]) %>% drop_na()
data_combined %>%
group_by(cluster) %>%
summarise(n = n(),
mean_gold = mean(gmsi_score, na.rm = T),
sd_gold = sd(gmsi_score, na.rm = T),
mean_age = mean(age, na.rm = T),
sd_age = mean(age, na.rm = T))

contemporary, extraversion, agreeableness, neuroticism,
conscientiousness, openness),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
data_combined_ratings
data_summary <- data_combined_ratings %>%
group_by(cluster_kmeans) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism,
RefCom:EneRhy
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_score_mean:openness_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_score_se:openness_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
# plot
ggplot(data_summary_mean, aes(x = cluster_kmeans, y = mean, fill = cluster_kmeans)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
data_summary_mean
data_combined_ratings %>%
group_by(cluster_kmeans) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism,
RefCom:EneRhy
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
data_combined_ratings %>%
group_by(cluster_kmeans) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism,
RefCom:EneRhy
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
data_summary
data_summary %>%
select(cluster_kmeans, contains("_mean"))
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_score_mean:openness_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_score_se:openness_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
data_summary_mean
data_summary
data_summary %>%
select(cluster_kmeans, contains("_mean"))
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_score_mean:EneRhy_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_score_se:EneRhy_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
# plot
ggplot(data_summary_mean, aes(x = cluster_kmeans, y = mean, fill = cluster_kmeans)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n())
data_summary %>%
select(cluster_kmeans, contains("_mean"))
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_mt_mean:EneRhy_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_mt_se:EneRhy_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
# plot
ggplot(data_summary_mean, aes(x = cluster_kmeans, y = mean, fill = cluster_kmeans)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
data_summary <- data_combined_ratings %>%
group_by(cluster_kmeans) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism, World,
RefCom:EneRhy
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_mt_mean:EneRhy_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_mt_se:EneRhy_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
# plot
ggplot(data_summary_mean, aes(x = cluster_kmeans, y = mean, fill = cluster_kmeans)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
# plots linking by clusters
ggplot(data_combined_ratings, aes(reorder(audio_name, z_answer), z_answer,
color=factor(cluster_hlc))) +
geom_boxplot() +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "bottom")
data_summary <- data_combined_ratings %>%
group_by(cluster_hlc) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism, World,
RefCom:EneRhy
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_mt_mean:EneRhy_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_mt_se:EneRhy_se, names_to = "variable", values_to = "se")
data_combined_ratings
data_combined_ratings %>%
group_by(cluster_hlc) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism, World,
RefCom:EneRhy
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
data_summary <- data_combined_ratings %>%
group_by(cluster_hlc) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism, World,
RefCom:EneRhy
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
# create data long format
data_summary_mean = data_summary %>%
select(cluster_hlc, contains("_mean")) %>%
pivot_longer(cols = gmsi_mt_mean:EneRhy_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_hlc, contains("_se")) %>%
pivot_longer(cols = gmsi_mt_se:EneRhy_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
# plot
ggplot(data_summary_mean, aes(x = cluster_kmeans, y = mean, fill = cluster_kmeans)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
# plot
ggplot(data_summary_mean, aes(x = cluster_hlc, y = mean, fill = cluster_hlc)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n(),
mean_gold = mean(gmsi_mt, na.rm = T),
mean_open = mean(openness, na.rm = T),
mean_age = mean(age, na.rm = T),
mean_world = mean(World, na.rm = T))
# number of clusters to extract
k = 2
# KMEANS + PCA approach
x = run_pca(data_to_clust, data_to_clust[,-1], k)
x$pca_res
x$sum_pca
x$elbow
x$silhouette
x$plot_2D_pca
cluster_kmeans = x$plot_2D_pca$data$cluster
data_pids$cluster_kmeans <- cluster_kmeans
# Hierarchical clustering
hc_res <- hclust(dist(data_to_clust[,-1]))
# Cut the hierarchical clustering tree into k clusters
cluster_hlc <- cutree(hc_res, k = k)
# Add cluster assignments as a new column to the dataset
data_to_clust$cluster_hlc <- cluster_hlc
# Plot dendrogram
plot(hc_res, hang = -1, cex = 0.6,
main = "Dendrogram - Hierarchical Clustering", xlab = "Cities", sub = "",
labels = data_to_clust$participant_id)
# Add clusters to the dendrogram
cluster_colors <- c("red", "blue", "green", "purple", "orange", "brown")
rect.hclust(hc_res, k = k, border = cluster_colors[1:k])
data_pids$cluster_hlc <- cluster_hlc
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n())
data_pids %>%
group_by(cluster_hlc) %>%
summarise(n = n())
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n(),
mean_gold = mean(gmsi_mt, na.rm = T),
mean_open = mean(openness, na.rm = T),
mean_age = mean(age, na.rm = T),
mean_world = mean(World, na.rm = T))
# clustering + individual differences
data_clean_ratings = data_clean %>%  select(participant_id, audio_name:z_answer)
data_combined_ratings = left_join(data_pids,
data_clean_ratings, by = "participant_id")
# plots linking by clusters
ggplot(data_combined_ratings, aes(reorder(audio_name, z_answer), z_answer,
color=factor(cluster_kmeans))) +
geom_boxplot() +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "bottom")
ggsave("plots/song_ratings_clusters.png", height = 10, width = 20, units = "cm")
data_summary <- data_combined_ratings %>%
group_by(cluster_kmeans) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism,
RefCom:EneRhy
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_mt_mean:EneRhy_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_mt_se:EneRhy_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
# plot
ggplot(data_summary_mean, aes(x = cluster_kmeans, y = mean, fill = cluster_kmeans)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
# number of clusters to extract
k = 4
# KMEANS + PCA approach
x = run_pca(data_to_clust, data_to_clust[,-1], k)
x$pca_res
x$sum_pca
x$elbow
x$silhouette
x$plot_2D_pca
cluster_kmeans = x$plot_2D_pca$data$cluster
data_pids$cluster_kmeans <- cluster_kmeans
# Hierarchical clustering
hc_res <- hclust(dist(data_to_clust[,-1]))
# Cut the hierarchical clustering tree into k clusters
cluster_hlc <- cutree(hc_res, k = k)
# Add cluster assignments as a new column to the dataset
data_to_clust$cluster_hlc <- cluster_hlc
# Plot dendrogram
plot(hc_res, hang = -1, cex = 0.6,
main = "Dendrogram - Hierarchical Clustering", xlab = "Cities", sub = "",
labels = data_to_clust$participant_id)
# Add clusters to the dendrogram
cluster_colors <- c("red", "blue", "green", "purple", "orange", "brown")
rect.hclust(hc_res, k = k, border = cluster_colors[1:k])
data_pids$cluster_hlc <- cluster_hlc
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n())
data_pids %>%
group_by(cluster_hlc) %>%
summarise(n = n())
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n(),
mean_gold = mean(gmsi_mt, na.rm = T),
mean_open = mean(openness, na.rm = T),
mean_age = mean(age, na.rm = T),
mean_world = mean(World, na.rm = T))
data_pids
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n(),
mean_gold = mean(gmsi_score, na.rm = T),
mean_open = mean(openness, na.rm = T),
mean_age = mean(age, na.rm = T),
mean_world = mean(World, na.rm = T))
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n(),
mean_gold = mean(gmsi_mt, na.rm = T),
mean_open = mean(openness, na.rm = T),
mean_age = mean(age, na.rm = T),
mean_world = mean(World, na.rm = T))
# clustering + individual differences
data_clean_ratings = data_clean %>%  select(participant_id, audio_name:z_answer)
data_combined_ratings = left_join(data_pids,
data_clean_ratings, by = "participant_id")
# plots linking by clusters
ggplot(data_combined_ratings, aes(reorder(audio_name, z_answer), z_answer,
color=factor(cluster_kmeans))) +
geom_boxplot() +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "bottom")
data_summary <- data_combined_ratings %>%
group_by(cluster_kmeans) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism,
RefCom:EneRhy
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_mt_mean:EneRhy_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_mt_se:EneRhy_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
# plot
ggplot(data_summary_mean, aes(x = cluster_kmeans, y = mean, fill = cluster_kmeans)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
# number of clusters to extract
k = 3
# KMEANS + PCA approach
x = run_pca(data_to_clust, data_to_clust[,-1], k)
x$pca_res
x$sum_pca
x$elbow
x$silhouette
x$plot_2D_pca
cluster_kmeans = x$plot_2D_pca$data$cluster
data_pids$cluster_kmeans <- cluster_kmeans
# Hierarchical clustering
hc_res <- hclust(dist(data_to_clust[,-1]))
# Cut the hierarchical clustering tree into k clusters
cluster_hlc <- cutree(hc_res, k = k)
# Add cluster assignments as a new column to the dataset
data_to_clust$cluster_hlc <- cluster_hlc
# Plot dendrogram
plot(hc_res, hang = -1, cex = 0.6,
main = "Dendrogram - Hierarchical Clustering", xlab = "Cities", sub = "",
labels = data_to_clust$participant_id)
# Add clusters to the dendrogram
cluster_colors <- c("red", "blue", "green", "purple", "orange", "brown")
rect.hclust(hc_res, k = k, border = cluster_colors[1:k])
data_pids$cluster_hlc <- cluster_hlc
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n())
data_pids %>%
group_by(cluster_hlc) %>%
summarise(n = n())
data_pids %>%
group_by(cluster_kmeans) %>%
summarise(n = n(),
mean_gold = mean(gmsi_mt, na.rm = T),
mean_open = mean(openness, na.rm = T),
mean_age = mean(age, na.rm = T),
mean_world = mean(World, na.rm = T))
# clustering + individual differences
data_clean_ratings = data_clean %>%  select(participant_id, audio_name:z_answer)
data_combined_ratings = left_join(data_pids,
data_clean_ratings, by = "participant_id")
# plots linking by clusters
ggplot(data_combined_ratings, aes(reorder(audio_name, z_answer), z_answer,
color=factor(cluster_kmeans))) +
geom_boxplot() +
ylab("Liking rating (z- scored)") +
xlab("stimuli") +
theme_classic() +
theme(legend.position = "bottom")
data_summary <- data_combined_ratings %>%
group_by(cluster_kmeans) %>%
summarize_at(
vars(gmsi_mt, gmsi_score, age,
extraversion, openness, agreeableness, neuroticism,
RefCom:EneRhy, World
),
list(
mean = ~mean(., na.rm = TRUE),
# sd = ~sd(., na.rm = TRUE),
se = ~sd(., na.rm = TRUE) / sqrt(length(.))
)
)
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_mt_mean:EneRhy_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_mt_se:EneRhy_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
# plot
ggplot(data_summary_mean, aes(x = cluster_kmeans, y = mean, fill = cluster_kmeans)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
data_combined_ratings
data_summary
# create data long format
data_summary_mean = data_summary %>%
select(cluster_kmeans, contains("_mean")) %>%
pivot_longer(cols = gmsi_score_mean:World_mean, names_to = "variable", values_to = "mean")
data_summary_se = data_summary %>%
select(cluster_kmeans, contains("_se")) %>%
pivot_longer(cols = gmsi_score_se:World_se, names_to = "variable", values_to = "se")
data_summary_mean$se = data_summary_se$se
# plot
ggplot(data_summary_mean, aes(x = cluster_kmeans, y = mean, fill = cluster_kmeans)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ variable, scales = "free") +
theme_minimal() +
labs(x = "Group", y = "Mean Value", fill = "cluster")
data_clean
################################################################################
# Linear mixed-effect model
################################################################################
## Linear models
model1 = lm(answer ~ gmsi_score + openness + World, data = data_clean)
summary.lm(model1)
library(lme4)
library(lmerTest)
library(ggplot2)
# add stimuli as a random effect?
mixed.lmer = lmer(answer ~ age + (1|participant_id), data = data_clean)
summary(mixed.lmer)
anova(mixed.lmer)
summary(mixed.lmer)
summary.lm(mixed.lmer)
summary.lm(mixed.lmer)
summary(mixed.lmer)
data_clean
